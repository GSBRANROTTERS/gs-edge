üíß Sistema de Monitoramento de N√≠vel de √Ågua com Arduino
üß† Descri√ß√£o Completa do Problema
Inunda√ß√µes s√£o eventos recorrentes em diversas regi√µes urbanas e rurais, principalmente em √°reas com infraestrutura deficiente de drenagem ou pr√≥ximas a corpos d'√°gua. A falta de monitoramento cont√≠nuo e em tempo real dos n√≠veis de √°gua dificulta a emiss√£o de alertas r√°pidos e efetivos, aumentando o risco de danos materiais, perdas econ√¥micas e at√© amea√ßas √† vida.

Este cen√°rio demanda uma solu√ß√£o acess√≠vel, automatizada e confi√°vel para medir o n√≠vel de √°gua, classificar o risco e emitir alertas visuais e sonoros, al√©m de registrar os dados para an√°lise posterior. Essa solu√ß√£o deve ser de f√°cil replica√ß√£o e implementa√ß√£o, podendo ser aplicada em rios, represas, bueiros ou √°reas cr√≠ticas.

‚úÖ Vis√£o Geral da Solu√ß√£o
O sistema desenvolvido √© um monitor de n√≠vel de √°gua automatizado, utilizando um microcontrolador Arduino Uno, um sensor ultrass√¥nico HC-SR04, LEDs de status, um buzzer de alarme e um display LCD I2C para feedback visual em tempo real. Al√©m disso, o sistema registra os dados em mem√≥ria EEPROM, permitindo rastreabilidade e an√°lise hist√≥rica do comportamento do n√≠vel de √°gua.

‚öôÔ∏è Componentes e Funcionalidade
Sensor Ultrass√¥nico HC-SR04: Mede a dist√¢ncia entre o sensor e a superf√≠cie da √°gua.

LEDs Indicadores:

Verde (pino 8): Indica condi√ß√£o normal e segura.

Amarelo (pino 9): N√≠vel elevado que exige aten√ß√£o.

Vermelho (pino 10): N√≠vel cr√≠tico que pode causar transbordamento.

Roxo (pino 11): Situa√ß√£o de risco extremo.

Buzzer (pino 12): Emite som de alarme nos n√≠veis mais graves (vermelho e roxo).

Display LCD 16x2 (I2C): Exibe em tempo real o n√≠vel de √°gua e o status correspondente.

EEPROM interna: Armazena logs com timestamp, dist√¢ncia medida e status de risco.

Serial Monitor: Apresenta o status continuamente para fins de debug e an√°lise.

üß© L√≥gica de Funcionamento
A cada ciclo de leitura (aproximadamente a cada 800 ms):

O sensor envia pulsos ultrass√¥nicos e mede o tempo de resposta do eco.

A dist√¢ncia medida (em cent√≠metros) √© calculada.

O sistema classifica o n√≠vel de risco:

‚â• 45 cm: Seguro (LED verde).

< 45 cm e > 30 cm: Alerta (LED amarelo).

‚â§ 30 cm e > 15 cm: Alto (LED vermelho, buzzer ativado).

‚â§ 15 cm: Cr√≠tico (LED roxo, buzzer ativado).

Os LEDs s√£o atualizados conforme o status.

O display LCD mostra o n√≠vel em texto (ex: "Bom", "Alerta!", "CRITICO!").

A EEPROM registra os dados com estrutura (timestamp, dist√¢ncia, status) para hist√≥rico.

Os dados s√£o exibidos na serial em tempo real.

üß† Estrutura de Dados da EEPROM
A EEPROM armazena dados de forma sequencial, iniciando no endere√ßo 3 (os endere√ßos 0‚Äì2 s√£o usados para marca√ß√£o de inicializa√ß√£o e controle). Cada entrada de log ocupa espa√ßo definido por uma estrutura (struct WaterLog), contendo:

timestamp (unsigned long): Momento da leitura.

distance (int): Dist√¢ncia em cent√≠metros.

status (byte): C√≥digo do n√≠vel de risco (0 a 3).

Quando a EEPROM atinge o fim, o sistema sobrescreve os dados do in√≠cio (modo circular).

üñ•Ô∏è Interface com o Usu√°rio
Display LCD:

Linha 1: "N√≠vel de √Ågua:"

Linha 2: Estado atual ("Bom", "Alerta!", "Alto! Abaixar!", "CRITICO!")

Monitor Serial:

Exibe logs como: Nivel: 42cm - ALERTA

üìå Considera√ß√µes T√©cnicas
O projeto utiliza a biblioteca LiquidCrystal_I2C para controle do LCD e EEPROM.h para grava√ß√£o persistente de dados.

O sistema implementa controle de frequ√™ncia de escrita, evitando desgaste da EEPROM.

O buzzer √© ativado apenas em estados cr√≠ticos para n√£o causar alarmes desnecess√°rios.

O projeto pode ser alimentado por fonte externa ou USB.

